{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/programming/JS_Programming/Ninja/react-app/react-redux/simple-hooks/src/components/ResourceList.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // state = { resources: []};\n// if (prevProps.resource !== this.props.resource) {\n// async componentDidUpdate(prevProps) { \n//   if(prevProps.resource !== this.props.resource) { \n//     const response = await Axios.get(\n//       `https://jsonplaceholder.typicode.com/${this.props.resource}`\n//     );\n//     this.setState({ resources: response.data})\n//   }\n// }\n\nconst ResourceList = () => {\n  const [resources, setResources] = useState([]);\n\n  const fetchResource = async () => {\n    const response = await axios.get(`http://jsonplaceholder.typicode.com/${resource}`);\n  };\n\n  this.setState({\n    resources: response.data\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, resources.length);\n};\n\nexport default ResourceList;","map":{"version":3,"sources":["/Users/user/Documents/programming/JS_Programming/Ninja/react-app/react-redux/simple-hooks/src/components/ResourceList.js"],"names":["React","useState","useEffect","axios","ResourceList","resources","setResources","fetchResource","response","get","resource","setState","data","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAIC;AAEC;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACzB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;;AAEE,QAAMM,aAAa,GAAG,YAAa;AAErC,UAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAN,CAAW,uCAAsCC,QAAS,EAA1D,CAAvB;AACC,GAHC;;AAKF,OAAKC,QAAL,CAAc;AAAEN,IAAAA,SAAS,EAAEG,QAAQ,CAACI;AAAtB,GAAd;AAEE,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,SAAS,CAACQ,MADb,CADF;AAKD,CAfH;;AAiBA,eAAeT,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios';\n\n\n\n // state = { resources: []};\n\n  // if (prevProps.resource !== this.props.resource) {\n\n  // async componentDidUpdate(prevProps) { \n//   if(prevProps.resource !== this.props.resource) { \n//     const response = await Axios.get(\n//       `https://jsonplaceholder.typicode.com/${this.props.resource}`\n//     );\n//     this.setState({ resources: response.data})\n//   }\n// }\n\nconst ResourceList = () => {  \n  const [resources, setResources] = useState([]);\n\n    const fetchResource = async  () => {\n\n  const response = await axios.get(`http://jsonplaceholder.typicode.com/${resource}`);\n  };\n\n  this.setState({ resources: response.data });\n\n    return (\n      <div>\n        {resources.length}\n      </div>\n    )\n  }\n\nexport default ResourceList;"]},"metadata":{},"sourceType":"module"}