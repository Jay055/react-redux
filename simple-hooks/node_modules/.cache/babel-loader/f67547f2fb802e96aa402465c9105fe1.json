{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/programming/JS_Programming/Ninja/react-app/react-redux/simple-hooks/src/components/ResourceList.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // state = { resources: []};\n// if (prevProps.resource !== this.props.resource) {\n// async componentDidUpdate(prevProps) { \n//   if(prevProps.resource !== this.props.resource) { \n//     const response = await Axios.get(\n//       `https://jsonplaceholder.typicode.com/${this.props.resource}`\n//     );\n//     this.setState({ resources: response.data})\n//   }\n// }\n// Destructure resource from props.resource (App.js props)\n\nconst ResourceList = ({\n  resource\n}) => {\n  const [resources, setResources] = useState([]);\n\n  const fetchResource = async resource => {\n    const response = await axios.get(`http://jsonplaceholder.typicode.com/${resource}`); // this.setState({ resources: response.data });\n\n    setResources(response.data);\n  };\n\n  useEffect(() => {\n    fetchResource(resource);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, resources.length);\n};\n\nexport default ResourceList;","map":{"version":3,"sources":["/Users/user/Documents/programming/JS_Programming/Ninja/react-app/react-redux/simple-hooks/src/components/ResourceList.js"],"names":["React","useState","useEffect","axios","ResourceList","resource","resources","setResources","fetchResource","response","get","data","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAIC;AAEC;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACrC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;;AAEE,QAAMO,aAAa,GAAG,MAAMH,QAAN,IAAkB;AAE1C,UAAMI,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAW,uCAAsCL,QAAS,EAA1D,CAAvB,CAF0C,CAK1C;;AACAE,IAAAA,YAAY,CAACE,QAAQ,CAACE,IAAV,CAAZ;AACD,GAPG;;AASJT,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,aAAa,CAACH,QAAD,CAAb;AACD,GAFQ,EAEN,EAFM,CAAT;AAII,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,SAAS,CAACM,MADb,CADF;AAKD,CArBH;;AAuBA,eAAeR,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios';\n\n\n\n // state = { resources: []};\n\n  // if (prevProps.resource !== this.props.resource) {\n\n  // async componentDidUpdate(prevProps) { \n//   if(prevProps.resource !== this.props.resource) { \n//     const response = await Axios.get(\n//       `https://jsonplaceholder.typicode.com/${this.props.resource}`\n//     );\n//     this.setState({ resources: response.data})\n//   }\n// }\n\n// Destructure resource from props.resource (App.js props)\nconst ResourceList = ({ resource }) => {  \n  const [resources, setResources] = useState([]);\n\n    const fetchResource = async resource => {\n\n  const response = await axios.get(`http://jsonplaceholder.typicode.com/${resource}`);\n  \n\n  // this.setState({ resources: response.data });\n  setResources(response.data);\n};\n\nuseEffect(() => { \n  fetchResource(resource);\n}, [])\n\n    return (\n      <div>\n        {resources.length}\n      </div>\n    )\n  }\n\nexport default ResourceList;"]},"metadata":{},"sourceType":"module"}