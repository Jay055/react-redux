// The CONTEXT SYSTEM WITH REACT //

With the context system you can pass information from the parent compoent to nested components direclty. 


// Ways we get information in and out of a context object 


Default Value        or     Parent Component 
                    data 
this.context                      Consumer


// Creating Context Objects 
The challenge in creating context isn't in creating but in getting information in and out. 

How to set up contexts
1. We  create a new context file  (LanguageContext.js)

2. import React from 'react'; 

3. // We can include a default value in the context English then connect to our nexted children
export default React.createContext('English'); 


// Link Contexts 
import in the file to be linked to 
Set up contextType in the file to be linked to eg. 
class Button extends React.Component {
  static contextType = LanguageContext;  //---- Special name

  static: Adding property to a class directly 
  Button.contextType === static contextType
  Button.contextType would be done outside the class

  // Change the value inside the context object 
  We have to communicate from the App component with the Provider component (different from redux).
  1. We would wrap the provider link with what we need to change 
        <LanguageContext.Provider value={this.state.language}>
        <UserCreate />
        </LanguageContext.Provider>

  Value= the state we want to change. 
  value=(can be any source of data)


// Breakdown of what we achieved with the provider component 
1. Application loads up in the browser. 
2. We create a context object with a default value of 'english'
3. App component gets rendered, creates a Provider that wraps UserCreate.
4. Provider updates the value of the context object to 'this.state.langauge'
5. Button and Field reach into context object, see the value from 'this.state.langauge'
6. Button and Field render appropriate text to the screen. 

// Each separate use of LanguageContext.Provider creates a new seperate pipe of information. 

        <LanguageContext.Provider value={this.state.language}>
        <UserCreate />
        </LanguageContext.Provider>
        <LanguageContext.Provider value={'english'}>
        <UserCreate />
        </LanguageContext.Provider>
        <LanguageContext.Provider value={'dutch'}>
        <UserCreate />
        </LanguageContext.Provider>
        <LanguageContext.Provider value={this.state.language}>
Each one has a different value. 

//< 309 Accessing Data with Consumers ----> 
1. The second way we can access data with context is through consumers. 
2. Consumer is a react component we can use to get info out of our context.

Changing the Button to Consumer. 